#!/bin/bash
noir='\033[30m' gris='\033[1;30m' rouge='\033[31m' rose='\033[1;31m' vertfonce='\033[0;32m' vertclair='\033[1;32m' jaune='\033[1;33m' bleufonce='\033[0;34m' bleuclair='\033[1;34m' violetfonce='\033[0;35m' violetclair='\033[1;35m' cyanfonce='\033[0;36m' cyanclair='\033[1;36m' grisclair='\033[0;37m' blanc='\033[1;37m' neutre='\033[0m'
echo -e "${bleufonce}*****${neutre}${rose} /!\ ${neutre} ${rouge}SCRIPT FOR GIT OPTIONS ONLY${neutre} ${rose}/!\ ${neutre}${bleufonce}*****${neutre}"
echo -e "${violetclair}What do you want to do${neutre}${vertclair}?${neutre} ${violetfonce}(add/status/log)${neutre}"
read action
while [ $action ] 
do
	if [ $action != status ] && [ $action != log ] && [ $action != add ] && [ $action != exit ]
	then
		echo -e "${rouge}Oops wrong answer,${neutre} ${rose}try again${neutre}${rouge}.${neutre}"
		read action
	fi
	if [ $action = exit ]
	then
		echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
		exit
	elif [ $action = status ]
	then
		git status
		echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
		exit
	elif [ $action = log ]
	then
		git log
		echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
		exit
	elif [ $action = add ]
	then
		git add *
		echo -e "${cyanfonce}What is the name of the commit${neutre}${jaune}?${neutre} ${gris}(only one word authorized)${neutre}"
		read commit 
		echo "$commit" > ~/goinfre/fread
		if grep -q ' ' ~/goinfre/fread
		then
			echo -e "${rouge}Too bad, but I said${neutre} ${vertclair}one${neutre} ${rouge}word.${neutre} ${rouge}Bye${neutre} ${jaune}!${neutre}"
			exit
		fi
		git commit -m $commit > ~/goinfre/commit
		git push 2>~/goinfre/push
		if grep -q error ~/goinfre/push
		then
			echo -e "${rose}There was a problem. For more info, enter ${neutre} ${vertclair}push${neutre}${rose}.${neutre}"
			read pb
			while [ $pb ]
			do
				if [ $pb = push ]
				then
					echo `cat ~/goinfre/push`
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				elif [ $pb = exit ]
				then
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				elif [ $pb != push ] && [ $pb != exit ]
				then
					echo -e "${rouge}Oops wrong answer,${neutre} ${rose}try again${neutre}${rouge}.${neutre}"
					read pb
				fi
			done
		else
			echo -e "${vertfonce}Your work has been pushed${neutre}${rouge}.${neutre}"
			echo -e "${rose}If you want to see the commit result, enter${neutre} ${vertclair}C${neutre}. ${rose}For push result, enter${neutre} ${vertclair}P${neutre}${rose}. Else, ${neutre}${vertclair}exit${neutre}${rose}.${neutre}"
		fi
		read rep
		while [ $rep ]
		do
			if [ $rep != C ] && [ $rep != P ] && [ $rep != exit ]
			then
				echo -e "${rouge}Oops wrong answer,${neutre} ${rose}try again${neutre}${rouge}.${neutre}"
				read pb
			elif [ $rep = C ]
			then
				echo `cat ~/goinfre/commit`
				echo -e "${rose}Anything else ?${neutre} ${rouge}(P/no)${neutre}"
				read ans
				if [ $ans = P ]
				then
					echo `cat ~/goinfre/push`
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				elif [ $ans = no ]
				then
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				fi
			elif [ $rep = P ]
			then
				echo `cat ~/goinfre/push`
				echo -e "${rose}Anything else ?${neutre} ${rouge}(C/no)${neutre}"
				read ans
				if [ $ans = C ]
				then
					echo `cat ~/goinfre/commit`
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				elif [ $ans = no ]
				then
					echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
					exit
				fi
			elif [ $rep = exit ]
			then
				echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
				exit
			fi
		done
		echo -e "${jaune}Have a nice day${neutre} ${cyanclair}!${neutre}"
		exit
	fi
done
